property.basePath = ./log

rootLogger.level = info
rootLogger.appenderRef.stdout.ref = CONSOLE_APPENDER
rootLogger.appenderRef.rolling.ref = ROLLING_FILE_APPENDER

# ---------- Begin of specific logger
loggers = your_project,spring,hbm,data,request

# Note: nếu muốn hiển thị debug log cho project đang làm, thì phải chỉ định đúng package name, và set level = debug
logger.your_project.name = com.sctt.cinema.api
logger.your_project.level = info

logger.spring.name = org.springframework
logger.spring.level = info

logger.hbm.name = org.hibernate
logger.hbm.level = warn

logger.data.name = org.springframework.data
logger.data.level = error

logger.request.name=org.springframework.web.filter.CommonsRequestLoggingFilter
logger.request.level=DEBUG

# ---------- End of specific logger

# ---------- Begin of ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = CONSOLE_APPENDER
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss}: [%5p] [%c{1} : L%L] %m%n
# ---------- End of ConsoleAppender

# ---------- Begin of RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = ROLLING_FILE_APPENDER
appender.rolling.fileName = ${basePath}/system.log
appender.rolling.filePattern = ${basePath}/system_%d{yyyy-MM-dd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss}: [%5p] [%c{1} : Line %L] %m%n
appender.rolling.policies.type = Policies

# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d
# ---------- End of RollingFileAppender